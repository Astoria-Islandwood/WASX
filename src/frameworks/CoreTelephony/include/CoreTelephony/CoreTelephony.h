/*
 This file is part of Darling.

 Copyright (C) 2019 Lubos Dolezel

 Darling is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 Darling is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Darling.  If not, see <http://www.gnu.org/licenses/>.
*/


#ifndef _CoreTelephony_H_
#define _CoreTelephony_H_

#import <Foundation/Foundation.h>

#import <CoreTelephony/CTMessageAddress.h>
#import <CoreTelephony/CTXPCServiceAppDataUsageInterface.h>
#import <CoreTelephony/CTXPCServiceBaseInterface.h>
#import <CoreTelephony/CTXPCServiceCallInterface.h>
#import <CoreTelephony/CTXPCServiceCapabilitiesInterface.h>
#import <CoreTelephony/CTXPCServiceCarrierBundleInterface.h>
#import <CoreTelephony/CTXPCServiceCarrierServicesInterface.h>
#import <CoreTelephony/CTXPCServiceCellMonitorInterface.h>
#import <CoreTelephony/CTXPCServiceCellularPlanManagerInterface.h>
#import <CoreTelephony/CTXPCServiceCellularUsagePolicyInterface.h>
#import <CoreTelephony/CTXPCServiceDataInterface.h>
#import <CoreTelephony/CTXPCServiceDeviceManagementInterface.h>
#import <CoreTelephony/CTXPCServiceEmergencyInterface.h>
#import <CoreTelephony/CTXPCServiceFTInterface.h>
#import <CoreTelephony/CTXPCServiceInterface.h>
#import <CoreTelephony/CTXPCServicePNRInterface.h>
#import <CoreTelephony/CTXPCServicePhonebookInterface.h>
#import <CoreTelephony/CTXPCServicePostponementInterface.h>
#import <CoreTelephony/CTXPCServiceRadioInterface.h>
#import <CoreTelephony/CTXPCServiceRegistrationInterface.h>
#import <CoreTelephony/CTXPCServiceSMSInterface.h>
#import <CoreTelephony/CTXPCServiceSubscriberInterface.h>
#import <CoreTelephony/CTXPCServiceSuppServicesInterface.h>
#import <CoreTelephony/CTXPCServiceVoicemailInterface.h>
#import <CoreTelephony/CoreTelephonyClientCallDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientCapabilitiesDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientCarrierBundleDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientCarrierServicesDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientCellularUsagePolicyDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientDataDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientDelegateProxyInterface.h>
#import <CoreTelephony/CoreTelephonyClientEmergencyDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientPNRDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientRegistrationDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientSMSDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientSubscriberDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientSuppServicesDelegateInternal.h>
#import <CoreTelephony/CoreTelephonyClientVoicemailDelegateInternal.h>
#import <CoreTelephony/MuxNotificationSinkDelegate.h>
#import <CoreTelephony/CTIMSRegistrationStatus.h>
#import <CoreTelephony/CTAsciiAddress.h>
#import <CoreTelephony/CTRadioAccessTechnology.h>
#import <CoreTelephony/CTBundle.h>
#import <CoreTelephony/CTMessage.h>
#import <CoreTelephony/CTSimLabel.h>
#import <CoreTelephony/CTPhoneNumber.h>
#import <CoreTelephony/CTSupportedMaxDataRates.h>
#import <CoreTelephony/CTRegistrationDisplayStatus.h>
#import <CoreTelephony/CTCallCapabilities.h>
#import <CoreTelephony/CTMmsRegistrationFailureInfoType.h>
#import <CoreTelephony/CTDataStatus.h>
#import <CoreTelephony/CTMessageCenter.h>
#import <CoreTelephony/CTMmsEncoder.h>
#import <CoreTelephony/CTEncryptionStatusInfo.h>
#import <CoreTelephony/CTMessagePart.h>
#import <CoreTelephony/CTIMSRegistrationTransportInfo.h>
#import <CoreTelephony/CTCallCenter.h>
#import <CoreTelephony/CTPhoneBookEntry.h>
#import <CoreTelephony/CTSuppServicesNotificationData.h>
#import <CoreTelephony/CTCallForwardingValue.h>
#import <CoreTelephony/CTMessageStatus.h>
#import <CoreTelephony/CTVoicemailInfoType.h>
#import <CoreTelephony/CTTelephonyNetworkInfo.h>
#import <CoreTelephony/CTEmailAddress.h>
#import <CoreTelephony/CTEmergencyMode.h>
#import <CoreTelephony/CTMobileEquipmentInfo.h>
#import <CoreTelephony/CTMobileEquipmentInfoList.h>
#import <CoreTelephony/CTSubscriberInfo.h>
#import <CoreTelephony/CTEmergencyModeResult.h>
#import <CoreTelephony/CTXPCServiceSubscriptionContext.h>
#import <CoreTelephony/CTXPCServiceSubscriptionInfo.h>
#import <CoreTelephony/CTXPCSimLessContextInfo.h>
#import <CoreTelephony/CTXPCSimLessContexts.h>
#import <CoreTelephony/CTXPCContextInfo.h>
#import <CoreTelephony/CTXPCContexts.h>
#import <CoreTelephony/CTDataSettings.h>
#import <CoreTelephony/CTAudioCodecInfo.h>
#import <CoreTelephony/CTCarrier.h>
#import <CoreTelephony/CTSignalStrengthInfo.h>
#import <CoreTelephony/CTSignalStrengthMeasurements.h>
#import <CoreTelephony/CTCellInfo.h>
#import <CoreTelephony/CTCall.h>
#import <CoreTelephony/CTCellIdInfo.h>
#import <CoreTelephony/CTBinarySMS.h>
#import <CoreTelephony/CTDataConnectionAvailabilityStatus.h>
#import <CoreTelephony/CTDataUsage.h>
#import <CoreTelephony/CTDataUsed.h>
#import <CoreTelephony/CTAppDataUsage.h>
#import <CoreTelephony/CTPerAppDataUsage.h>
#import <CoreTelephony/CTDeviceDataUsage.h>
#import <CoreTelephony/CTServiceDescriptor.h>
#import <CoreTelephony/CTServiceDescriptorContainer.h>
#import <CoreTelephony/CTCellularPlanProvisioningRequest.h>
#import <CoreTelephony/CTVoiceLinkQualityMetric.h>
#import <CoreTelephony/CTEnhancedLinkQualityMetric.h>
#import <CoreTelephony/CTEnhancedDataLinkQualityMetric.h>
#import <CoreTelephony/CoreTelephonyClientRemoteAsyncProxy.h>
#import <CoreTelephony/CTNetworkList.h>
#import <CoreTelephony/CoreTelephonyClientDelegateProxy.h>
#import <CoreTelephony/CTXPCError.h>
#import <CoreTelephony/CTNetwork.h>
#import <CoreTelephony/CTDataConnectionStatus.h>
#import <CoreTelephony/CTPNRDataType.h>
#import <CoreTelephony/CTPNRRequestType.h>
#import <CoreTelephony/CTPNRRequestSentInfo.h>
#import <CoreTelephony/CTPNRContextInfo.h>
#import <CoreTelephony/MuxNotificationSink.h>
#import <CoreTelephony/CoreTelephonyClientMux.h>
#import <CoreTelephony/CTSubscriberAlgorithm.h>
#import <CoreTelephony/CTSubscriberAlgorithmEAPSIM.h>
#import <CoreTelephony/CTSubscriberAlgorithmEAPAKA.h>
#import <CoreTelephony/CTSubscriberAuthRequest.h>
#import <CoreTelephony/CTSubscriberAuthResult.h>
#import <CoreTelephony/CoreTelephonyClient.h>
#import <CoreTelephony/CTNetworkSelectionInfo.h>
#import <CoreTelephony/CTCellularPlanManagerCameraScanAction.h>
#import <CoreTelephony/CTSubscriberAuthDataHolder.h>
#import <CoreTelephony/CTPhoneNumberInfo.h>
#import <CoreTelephony/CTPriVersion.h>
#import <CoreTelephony/CTSMSDataType.h>

void* CTCallAddressBlocked(void);
void* CTCallAnswer(void);
void* CTCallAnswerEndingActive(void);
void* CTCallAnswerEndingActiveWithSourceIdentifier(void);
void* CTCallAnswerEndingHeld(void);
void* CTCallAnswerWithOptions(void);
void* CTCallAnswerWithSourceIdentifier(void);
void* CTCallCopyAddress(void);
void* CTCallCopyCountryCode(void);
void* CTCallCopyISOCountryCode(void);
void* CTCallCopyName(void);
void* CTCallCopyNetworkCode(void);
void* CTCallCopyUUID(void);
void* CTCallCopyUniqueStringID(void);
void* CTCallCreateCallRef(void);
void* CTCallCreateFromSerializedData(void);
void* CTCallDial(void);
void* CTCallDialAny(void);
void* CTCallDialEmergency(void);
void* CTCallDialService(void);
void* CTCallDialVoicemail(void);
void* CTCallDialWithAssist(void);
void* CTCallDialWithID(void);
void* CTCallDialWithIDAndSourceIdentifier(void);
void* CTCallDialWithOptions(void);
void* CTCallDialWithSourceIdentifier(void);
void* CTCallDidDeviceOriginateEnd(void);
void* CTCallDisconnect(void);
void* CTCallDisconnectWithCauseCode(void);
void* CTCallEndVideoConference(void);
void* CTCallGetCallSubType(void);
void* CTCallGetCallType(void);
void* CTCallGetCauseCode(void);
void* CTCallGetCauseCodeString(void);
void* CTCallGetDuration(void);
void* CTCallGetEmergencyStatus(void);
void* CTCallGetMultiPartyCallCountMax(void);
void* CTCallGetStartTime(void);
void* CTCallGetStatus(void);
void* CTCallGetTypeID(void);
void* CTCallHold(void);
void* CTCallIsAlerting(void);
void* CTCallIsCallHandoffPossible(void);
void* CTCallIsConferenced(void);
void* CTCallIsOutgoing(void);
void* CTCallIsToVoicemail(void);
void* CTCallIsWaiting(void);
void* CTCallJoinConference(void);
void* CTCallLeaveConference(void);
void* CTCallListDisconnect(void);
void* CTCallListDisconnectAll(void);
void* CTCallMediaStatusIsActive(void);
void* CTCallPhoneNumberIsMmiOrUssd(void);
void* CTCallPullCallFromOtherDevice(void);
void* CTCallResume(void);
void* CTCallSetCallEndTime(void);
void* CTCallSetCallInfo(void);
void* CTCallSetCallStartTime(void);
void* CTCallSetCallStatus(void);
void* CTCallShouldPlayAudioTone(void);
void* CTCallShouldSetupAudioInterruption(void);
void* CTCallStartVideoConference(void);
void* CTCallSwap(void);
void* CTCallSwitchCallSource(void);
void* CTCallSwitchCallSourceAll(void);
void* CTCellularDataPlanAccountUpdated(void);
void* CTCellularDataPlanActivationFailed(void);
void* CTCellularDataPlanCopyAccountUrlString(void);
void* CTCellularDataPlanCopyDeviceInfo(void);
void* CTCellularDataPlanGetIsEnabled(void);
void* CTCellularDataPlanSetIsEnabled(void);
void* CTCellularDataPlanSetWebsheetVisibility(void);
void* CTCopyCallManagementState(void);
void* CTCopyCurrentCalls(void);
void* CTCopyCurrentCallsWithTypes(void);
void* CTCreateCallInfoForHandoffCall(void);
void* CTDTMFCancelHardPause(void);
void* CTDTMFCopyHardPauseDigits(void);
void* CTDTMFPlayStart(void);
void* CTDTMFPlayStop(void);
void* CTDTMFSendDigitsNow(void);
void* CTDataRateAsString(void);
void* CTEmergencyModeTypeAsString(void);
void* CTEnhancedLQMIndicationTypeAsString(void);
void* CTEsimCapabilityAsString(void);
void* CTGetCurrentCallCount(void);
void* CTGetCurrentCallCountWithTypes(void);
void* CTGetEmergencyWiFiConfig(void);
void* CTGetSignalStrength(void);
void* CTIndicatorsCopyVoicemailStatus(void);
void* CTIndicatorsGetSignalStrength(void);
void* CTNetworkSelectionModeAsString(void);
void* CTNetworkSelectionStateAsString(void);
void* CTRegistrationAutomaticallySelectNetwork(void);
void* CTRegistrationCellularDataPlanAccountUpdated(void);
void* CTRegistrationCopyAbbreviatedOperatorName(void);
void* CTRegistrationCopyDataStatus(void);
void* CTRegistrationCopyISOCountryCodeForMobileCountryCode(void);
void* CTRegistrationCopyLocalizedOperatorName(void);
void* CTRegistrationCopyManualNetworkSelection(void);
void* CTRegistrationCopyOperatorName(void);
void* CTRegistrationCopySupportedDataRates(void);
void* CTRegistrationDataCounterGetLastResetTime(void);
void* CTRegistrationGetCDMAInternationalRoaming(void);
void* CTRegistrationGetCurrentMaxAllowedDataRate(void);
void* CTRegistrationGetDataAttached(void);
void* CTRegistrationGetDataContextActive(void);
void* CTRegistrationGetDataIndicator(void);
void* CTRegistrationGetEULocalBreakOutEnabled(void);
void* CTRegistrationGetEmergencyCallBackMode(void);
void* CTRegistrationGetInternationalDataAccessStatus(void);
void* CTRegistrationGetNetworkSelectionMode(void);
void* CTRegistrationGetNetworkSelectionState(void);
void* CTRegistrationGetStatus(void);
void* CTRegistrationIsCDMAInternationalRoamingSettingAllowed(void);
void* CTRegistrationIsEULocalBreakOutAvailable(void);
void* CTRegistrationIsInE911OverLTEMode(void);
void* CTRegistrationManuallySelectNetwork(void);
void* CTRegistrationNetworkSelectionMenuAvailable(void);
void* CTRegistrationRequestNetworkList(void);
void* CTRegistrationSetCDMAInternationalRoaming(void);
void* CTRegistrationSetDataContextActive(void);
void* CTRegistrationSetEULocalBreakOutEnabled(void);
void* CTRegistrationSetInternationalDataAccessStatus(void);
void* CTSIMSupportCopyMobileSubscriberCountryCode(void);
void* CTSIMSupportCopyMobileSubscriberIdentity(void);
void* CTSIMSupportCopyMobileSubscriberNetworkCode(void);
void* CTSIMSupportGetRemainingPINAttempts(void);
void* CTSIMSupportGetRemainingPUKAttempts(void);
void* CTSIMSupportGetSIMStatus(void);
void* CTSIMSupportPINUnlock(void);
void* CTSIMSupportPUKUnlock(void);
void* CTServerConnectionDualSimCapabilityAsString(void);
void* CTSettingCopyDualIPBringUp(void);
void* CTSettingCopyEPDGAddress(void);
void* CTSettingCopyEffectiveSimInfo(void);
void* CTSettingCopyFakePrimaryDNSKey(void);
void* CTSettingCopyFakeSecondaryDNSKey(void);
void* CTSettingCopyMyPhoneNumber(void);
void* CTSettingCopyMyPhoneNumberExtended(void);
void* CTSettingCopyPCSCFAddress(void);
void* CTSettingCopyShowVoLTEStatusIndicator(void);
void* CTSettingCopyVerifyAPN(void);
void* CTSettingCopyVerifyCarrierBundles(void);
void* CTSettingCopyWiFiCallingInCallHandover(void);
void* CTSettingRequest(void);
void* CTSettingSave(void);
void* CTSettingSetDualIPBringUp(void);
void* CTSettingSetEPDGAddress(void);
void* CTSettingSetFakePrimaryDNSKey(void);
void* CTSettingSetFakeSecondaryDNSKey(void);
void* CTSettingSetIMSIOverride(void);
void* CTSettingSetPCSCFAddress(void);
void* CTSettingSetShowVoLTEStatusIndicator(void);
void* CTSettingSetVerifyAPN(void);
void* CTSettingSetVerifyCarrierBundles(void);
void* CTSettingSetWiFiCallingInCallHandover(void);
void* CTSettingsCopyiWlanGatewayAddress(void);
void* CTStartManualOTASP(void);
void* CTStartOTASP(void);
void* CTSubscriptionSlotAsString(void);
void* CTSubscriptionSlotAsUUID(void);
void* CTSweetgumConvertDataUnits(void);
void* CTSweetgumDataUnitsAsString(void);
void* CTSweetgumDeviceTypeAsString(void);
void* CTSweetgumPlanCategoryAsString(void);
void* CTSweetgumPlanPurchaseStatusAsString(void);
void* CTSweetgumPlanStatusAsString(void);
void* CTSweetgumRegistrationStatusAsString(void);
void* CTTelephonyCenterAddObserver(void);
void* CTTelephonyCenterGetDefault(void);
void* CTTelephonyCenterGetRunLoop(void);
void* CTTelephonyCenterRemoveEveryObserver(void);
void* CTTelephonyCenterRemoveObserver(void);
void* CTTelephonyCenterSendBarrier(void);
void* CTTelephonyCenterSetDefaultDispatchQueue(void);
void* CTTelephonyCenterSetDefaultDispatchQueuePermanently(void);
void* CTTelephonyCenterSetDefaultRunloop(void);
void* CTTelephonyCenterSetDefaultRunloopPermanently(void);
void* CTUSSDSessionCancel(void);
void* CTUSSDSessionSendResponse(void);
void* ConvertAccountQueryTypesToMask(void);
void* GetCarrierEntitlementNameById(void);
void* GetCarrierEntitlementResultString(void);
void* HexToString(void);
void* VMCopyDictionaryForNotificationString(void);
void* _CFDataCreateFromHexString(void);
void* _CFStringCopyMCCMNCFromIMSI(void);
void* _CFStringCreateHexFromBinary(void);
void* _CFStringGetMobileUser(void);
void* _CFStringGetOrCreateCString(void);
void* _CFStringGetWirelessUser(void);
void* _CFStringHasPrefixCaseInsensitive(void);
void* _CTCallCopyCurrentCalls(void);
void* _CTCallHistoryStoreCallTimersGetAll(void);
void* _CTCallHistoryStoreGetCountOfMissedCallSince(void);
void* _CTCallHistoryStoreGetCountOfMissedCallWithTypesSince(void);
void* _CTServerConnectionAddIdentifierException(void);
void* _CTServerConnectionAddToRunLoop(void);
void* _CTServerConnectionAddVictimFreq(void);
void* _CTServerConnectionAudioSampleRateSwitchDidComplete(void);
void* _CTServerConnectionAutomaticallySelectNetwork(void);
void* _CTServerConnectionBlockBBFreqReport(void);
void* _CTServerConnectionCanSetCapability(void);
void* _CTServerConnectionCanSetCapabilityExtended(void);
void* _CTServerConnectionCarrierSettingsCopyValue(void);
void* _CTServerConnectionCarrierSettingsCopyValueForPreferredDataSIM(void);
void* _CTServerConnectionCellMonitorCopyCellInfo(void);
void* _CTServerConnectionCellMonitorGetCellCount(void);
void* _CTServerConnectionCellMonitorGetCellInfo(void);
void* _CTServerConnectionCellMonitorGetUmtsCellCount(void);
void* _CTServerConnectionCellMonitorGetUmtsCellInfo(void);
void* _CTServerConnectionCellMonitorStart(void);
void* _CTServerConnectionCellMonitorStop(void);
void* _CTServerConnectionCellularDataPlanAccountUpdated(void);
void* _CTServerConnectionCellularDataPlanActivationFailed(void);
void* _CTServerConnectionCleanBasebandLogs(void);
void* _CTServerConnectionClearVictimFreq(void);
void* _CTServerConnectionConfigAndCopyTxController(void);
void* _CTServerConnectionConfigMaxRadioPower(void);
void* _CTServerConnectionConfigMaxTransmitPower(void);
void* _CTServerConnectionConfigureLogging(void);
void* _CTServerConnectionCopyAbbreviatedOperatorName(void);
void* _CTServerConnectionCopyAccountInformation(void);
void* _CTServerConnectionCopyActiveAndSupportedBands(void);
void* _CTServerConnectionCopyAudioVocoderInfo(void);
void* _CTServerConnectionCopyBandInfo(void);
void* _CTServerConnectionCopyBasebandSettings(void);
void* _CTServerConnectionCopyBasebandThumbprint(void);
void* _CTServerConnectionCopyCallManagementState(void);
void* _CTServerConnectionCopyCarrierBundleInfoArray(void);
void* _CTServerConnectionCopyCellBroadcastAlertTypes(void);
void* _CTServerConnectionCopyCellularTransmitState(void);
void* _CTServerConnectionCopyCellularUsagePolicy(void);
void* _CTServerConnectionCopyCellularUsageWorkspaceInfo(void);
void* _CTServerConnectionCopyCompanionPhoneNumber(void);
void* _CTServerConnectionCopyCountryCode(void);
void* _CTServerConnectionCopyCurrentMTU(void);
void* _CTServerConnectionCopyDataActivityAssertionProcesses(void);
void* _CTServerConnectionCopyDataStatus(void);
void* _CTServerConnectionCopyDataUsageForSubscriber(void);
void* _CTServerConnectionCopyDualSimCapability(void);
void* _CTServerConnectionCopyEffectiveSimInfo(void);
void* _CTServerConnectionCopyFirmwareBaselineVersion(void);
void* _CTServerConnectionCopyFirmwareManifestData(void);
void* _CTServerConnectionCopyFirmwareManifestStatus(void);
void* _CTServerConnectionCopyFirmwareNonce(void);
void* _CTServerConnectionCopyFirmwarePreflightInfo(void);
void* _CTServerConnectionCopyFirmwareSecurityInfo(void);
void* _CTServerConnectionCopyFirmwareUpdateInfo(void);
void* _CTServerConnectionCopyFirmwareVersion(void);
void* _CTServerConnectionCopyISOForMCC(void);
void* _CTServerConnectionCopyLastKnownCountryCode(void);
void* _CTServerConnectionCopyLastKnownMobileCountryCode(void);
void* _CTServerConnectionCopyLastKnownMobileSubscriberCountryCode(void);
void* _CTServerConnectionCopyListVictimFreq(void);
void* _CTServerConnectionCopyLocalizedOperatorName(void);
void* _CTServerConnectionCopyManualNetworkSelection(void);
void* _CTServerConnectionCopyMobileCountryCode(void);
void* _CTServerConnectionCopyMobileEquipmentInfo(void);
void* _CTServerConnectionCopyMobileNetworkCode(void);
void* _CTServerConnectionCopyMobileSubscriberAndIsoCountryCodes(void);
void* _CTServerConnectionCopyMobileSubscriberCountryCode(void);
void* _CTServerConnectionCopyMobileSubscriberHomeCountryList(void);
void* _CTServerConnectionCopyMobileSubscriberIdentity(void);
void* _CTServerConnectionCopyMobileSubscriberNetworkCode(void);
void* _CTServerConnectionCopyNetworkCode(void);
void* _CTServerConnectionCopyNetworkList(void);
void* _CTServerConnectionCopyNextCall(void);
void* _CTServerConnectionCopyNumericNetworkCode(void);
void* _CTServerConnectionCopyOperatorName(void);
void* _CTServerConnectionCopyPacketContextInterfaceName(void);
void* _CTServerConnectionCopyPacketContextInterfaceNameByServiceType(void);
void* _CTServerConnectionCopyPhoneBookEntry(void);
void* _CTServerConnectionCopyPhoneNumber(void);
void* _CTServerConnectionCopyPhoneNumberSignature(void);
void* _CTServerConnectionCopyPhoneServiceDeviceList(void);
void* _CTServerConnectionCopyPostponementStatus(void);
void* _CTServerConnectionCopyProviderNameUsingCarrierBundle(void);
void* _CTServerConnectionCopyRegistrationInfo(void);
void* _CTServerConnectionCopyReliableNetworkFallbackSettings(void);
void* _CTServerConnectionCopySIMIdentity(void);
void* _CTServerConnectionCopySIMToolkitList(void);
void* _CTServerConnectionCopySIMToolkitMenu(void);
void* _CTServerConnectionCopyServiceCenterAddressValue(void);
void* _CTServerConnectionCopyServingPLMN(void);
void* _CTServerConnectionCopyStartDateOfCellularDataUsageRecords(void);
void* _CTServerConnectionCopySupportedDataRates(void);
void* _CTServerConnectionCopySystemCapabilities(void);
void* _CTServerConnectionCopyTraceProperty(void);
void* _CTServerConnectionCopyUSSDString(void);
void* _CTServerConnectionCopyUsageAlertParameters(void);
void* _CTServerConnectionCopyVoiceCarrierBundleValue(void);
void* _CTServerConnectionCopyVoiceMailInfo(void);
void* _CTServerConnectionCreate(void);
void* _CTServerConnectionCreateAndLaunchWithIdentifier(void);
void* _CTServerConnectionCreateEncryptedIdentity(void);
void* _CTServerConnectionCreateOnRunLoop(void);
void* _CTServerConnectionCreateOnTargetQueue(void);
void* _CTServerConnectionCreateWithIdentifier(void);
void* _CTServerConnectionDataActivationPopupAssertionCreate(void);
void* _CTServerConnectionDeviceManagementUpdate(void);
void* _CTServerConnectionDisablePCMChannel(void);
void* _CTServerConnectionDisableRegistration(void);
void* _CTServerConnectionDoCSIPropertyOperation(void);
void* _CTServerConnectionDoModuleOperation(void);
void* _CTServerConnectionDormancySuspendAssertionCreate(void);
void* _CTServerConnectionDormancySuspendAssertionCreateWithExpirationCB(void);
void* _CTServerConnectionDropIPPackets(void);
void* _CTServerConnectionDumpBasebandState(void);
void* _CTServerConnectionDumpMemory(void);
void* _CTServerConnectionDumpState(void);
void* _CTServerConnectionEchoCancelationAndNoiseReduction(void);
void* _CTServerConnectionEnableEmergencyCallBackMode(void);
void* _CTServerConnectionEnableHAC(void);
void* _CTServerConnectionEnableMediaToDownlink(void);
void* _CTServerConnectionEnablePCMChannel(void);
void* _CTServerConnectionEnableRegistration(void);
void* _CTServerConnectionEnableRemoteDiagnostics(void);
void* _CTServerConnectionEnableVoicePrivacy(void);
void* _CTServerConnectionEntitlementsClearSecondaryIccids(void);
void* _CTServerConnectionEntitlementsGetPreferredRoamingNetworks(void);
void* _CTServerConnectionEntitlementsGetSIMStatus(void);
void* _CTServerConnectionEntitlementsSetPreferredRoamingNetworks(void);
void* _CTServerConnectionEntitlementsSetSecondaryIccids(void);
void* _CTServerConnectionEntitlementsSignUpSIMService(void);
void* _CTServerConnectionEraseAllUserProfiles(void);
void* _CTServerConnectionEraseBasebandSettings(void);
void* _CTServerConnectionEraseCellularDataUsageRecords(void);
void* _CTServerConnectionEraseCellularDataUsageRecordsEx(void);
void* _CTServerConnectionEraseCommCentersPreferences(void);
void* _CTServerConnectionEraseNetworkSettings(void);
void* _CTServerConnectionEvaluateMobileSubscriberIdentity(void);
void* _CTServerConnectionExecuteCommand(void);
void* _CTServerConnectionFetchNetworkList(void);
void* _CTServerConnectionFetchPhonebook(void);
void* _CTServerConnectionFetchTimeFromNetwork(void);
void* _CTServerConnectionGetAPNConfiguration(void);
void* _CTServerConnectionGetActiveWirelessTechnology(void);
void* _CTServerConnectionGetAllowedRadioMode(void);
void* _CTServerConnectionGetAttachAPNSettings(void);
void* _CTServerConnectionGetAudioLoggingEnabled(void);
void* _CTServerConnectionGetCDMAInternationalRoaming(void);
void* _CTServerConnectionGetCDRXWithLTEState(void);
void* _CTServerConnectionGetCapabilityStatus(void);
void* _CTServerConnectionGetCapabilityStatusExtended(void);
void* _CTServerConnectionGetCarrierEntitlements(void);
void* _CTServerConnectionGetCarrierSpaceUpdates(void);
void* _CTServerConnectionGetCellBroadcastSettingForAlertType(void);
void* _CTServerConnectionGetCellID(void);
void* _CTServerConnectionGetCellularDataIsDisallowed(void);
void* _CTServerConnectionGetCellularDataIsEnabled(void);
void* _CTServerConnectionGetCellularDataIsEnabledEx(void);
void* _CTServerConnectionGetCellularDataSettings(void);
void* _CTServerConnectionGetCellularUsagePolicyEx(void);
void* _CTServerConnectionGetCellularUsagePolicyMirroring(void);
void* _CTServerConnectionGetCellularUsageWorkspaceInfoEx(void);
void* _CTServerConnectionGetCommCenterInitializationState(void);
void* _CTServerConnectionGetCurrentMaxAllowedDataRate(void);
void* _CTServerConnectionGetDTMFType(void);
void* _CTServerConnectionGetDataServiceAvailability(void);
void* _CTServerConnectionGetDisallowTelephonyFeature(void);
void* _CTServerConnectionGetE911OverLTEModeStatus(void);
void* _CTServerConnectionGetE911OverWifiModeStatus(void);
void* _CTServerConnectionGetEMBMSSAIListInfo(void);
void* _CTServerConnectionGetEMBMSSigInfo(void);
void* _CTServerConnectionGetEMBMSStatus(void);
void* _CTServerConnectionGetEmergencyCallBackMode(void);
void* _CTServerConnectionGetEmergencyCallStatus(void);
void* _CTServerConnectionGetEnableOnlyHomeNetwork(void);
void* _CTServerConnectionGetEnhancedVoiceLinkQualityMetric(void);
void* _CTServerConnectionGetHACState(void);
void* _CTServerConnectionGetInterfaceFamilies(void);
void* _CTServerConnectionGetInternationalDataAccessStatus(void);
void* _CTServerConnectionGetLocationAreaCode(void);
void* _CTServerConnectionGetManagedCellularProfile(void);
void* _CTServerConnectionGetMultiPartyCallCountMaximum(void);
void* _CTServerConnectionGetNATTKeepAliveOverCell(void);
void* _CTServerConnectionGetNetworkSelectionMode(void);
void* _CTServerConnectionGetNetworkSelectionState(void);
void* _CTServerConnectionGetOTAServerOverride(void);
void* _CTServerConnectionGetPLMNPriorityInfo(void);
void* _CTServerConnectionGetPacketContextActive(void);
void* _CTServerConnectionGetPacketContextActiveByServiceType(void);
void* _CTServerConnectionGetPacketContextActiveByServiceTypeExtended(void);
void* _CTServerConnectionGetPacketContextCount(void);
void* _CTServerConnectionGetPacketContextStatistics(void);
void* _CTServerConnectionGetPacketDataLoadInfo(void);
void* _CTServerConnectionGetPhonebookEntryCount(void);
void* _CTServerConnectionGetRATSelection(void);
void* _CTServerConnectionGetRadioAccessTechnology(void);
void* _CTServerConnectionGetRadioAccessTechnologyForPreferredDataSIM(void);
void* _CTServerConnectionGetRadioModuleIsDead(void);
void* _CTServerConnectionGetRadioState(void);
void* _CTServerConnectionGetRegistrationCauseCode(void);
void* _CTServerConnectionGetRegistrationStatus(void);
void* _CTServerConnectionGetRemainingPINAttemptCount(void);
void* _CTServerConnectionGetRemainingPUKAttemptCount(void);
void* _CTServerConnectionGetRemoteBundleInfo(void);
void* _CTServerConnectionGetRemoteServerURL(void);
void* _CTServerConnectionGetResetCellularAccountSettingsIsAllowed(void);
void* _CTServerConnectionGetResetState(void);
void* _CTServerConnectionGetSIMStatus(void);
void* _CTServerConnectionGetSIMTrayStatus(void);
void* _CTServerConnectionGetShowUsageAlert(void);
void* _CTServerConnectionGetSignalStrength(void);
void* _CTServerConnectionGetSignalStrengthDisplayValue(void);
void* _CTServerConnectionGetSupportedEnhancedLinkQualityMetric(void);
void* _CTServerConnectionGetTTYMode(void);
void* _CTServerConnectionGetTemperature(void);
void* _CTServerConnectionGetTestModeFunction(void);
void* _CTServerConnectionGetThumperName(void);
void* _CTServerConnectionGetTypeID(void);
void* _CTServerConnectionGetUIConfiguredApns(void);
void* _CTServerConnectionGetUpdatedCarrierBundle(void);
void* _CTServerConnectionGetUplinkFreq(void);
void* _CTServerConnectionGetVoiceLinkQualityMetric(void);
void* _CTServerConnectionGetVoiceMailAvailable(void);
void* _CTServerConnectionGetVoiceMute(void);
void* _CTServerConnectionGetVoicePrivacy(void);
void* _CTServerConnectionGetXpcConnection(void);
void* _CTServerConnectionHandleReply(void);
void* _CTServerConnectionHideDataIndicator(void);
void* _CTServerConnectionHideRatIndicator(void);
void* _CTServerConnectionICloudAccountReset(void);
void* _CTServerConnectionInjectCellBroadcastMessage(void);
void* _CTServerConnectionInjectCellBroadcastMessageWithWac(void);
void* _CTServerConnectionInstallCarrierBundle(void);
void* _CTServerConnectionIsAnyCallActiveOrHeld(void);
void* _CTServerConnectionIsCDMAInternationalRoamingSettingAllowed(void);
void* _CTServerConnectionIsDataAttached(void);
void* _CTServerConnectionIsDataAttachedForPreferredDataSIM(void);
void* _CTServerConnectionIsDefaultConnection(void);
void* _CTServerConnectionIsEmergencyNumber(void);
void* _CTServerConnectionIsEmergencyNumberWithWhitelistIncluded(void);
void* _CTServerConnectionIsEncryptedIdentitySupported(void);
void* _CTServerConnectionIsInHomeCountry(void);
void* _CTServerConnectionIsInHomeCountryForPreferredDataSIM(void);
void* _CTServerConnectionIsPhoneNumberCredentialValid(void);
void* _CTServerConnectionIsPhoneNumberRegistrationSupported(void);
void* _CTServerConnectionIsServiceOverPublicInternet(void);
void* _CTServerConnectionIsSilenceAssertionBarred(void);
void* _CTServerConnectionIsUserIdentityModuleRequired(void);
void* _CTServerConnectionIsValidEmergencyNumber(void);
void* _CTServerConnectionKeepAliveAssertionCreate(void);
void* _CTServerConnectionLoadManagedCellularProfile(void);
void* _CTServerConnectionLockPostponementTicket(void);
void* _CTServerConnectionModifyAttachAPNSettings(void);
void* _CTServerConnectionNetworkMonitorCreateLogChannel(void);
void* _CTServerConnectionNetworkSelectionMenuAvailable(void);
void* _CTServerConnectionOTAActivationAssertionCreate(void);
void* _CTServerConnectionPINUnlock(void);
void* _CTServerConnectionPUKUnlock(void);
void* _CTServerConnectionPacketContextAssertionCreate(void);
void* _CTServerConnectionPerformInternalVinylOperation(void);
void* _CTServerConnectionPerformMigration(void);
void* _CTServerConnectionPhoneServicesAccountStatusChanged(void);
void* _CTServerConnectionPhoneServicesAddDevice(void);
void* _CTServerConnectionPhoneServicesDisableDevice(void);
void* _CTServerConnectionPhoneServicesEnableDevice(void);
void* _CTServerConnectionPhoneServicesGetDeviceInfo(void);
void* _CTServerConnectionPhoneServicesGetDeviceList(void);
void* _CTServerConnectionPhoneServicesRemoveDevice(void);
void* _CTServerConnectionQueryAccountInformation(void);
void* _CTServerConnectionQueryEnhancedLinkQualityMetric(void);
void* _CTServerConnectionRegisterBlockForNotification(void);
void* _CTServerConnectionRegisterForEvent(void);
void* _CTServerConnectionRegisterForNotification(void);
void* _CTServerConnectionRegisterSilentHoursCallback(void);
void* _CTServerConnectionRegisterSupportedEnhancedLinkQualityMetric(void);
void* _CTServerConnectionRegistrationNotificationAssertionCreate(void);
void* _CTServerConnectionReleaseQOS(void);
void* _CTServerConnectionRemoveVictimFreq(void);
void* _CTServerConnectionRequestQOS(void);
void* _CTServerConnectionResetCarrierBundle(void);
void* _CTServerConnectionResetModem(void);
void* _CTServerConnectionResetModemWithCrashLogs(void);
void* _CTServerConnectionResetPacketContextSettings(void);
void* _CTServerConnectionResetPacketContextStatistics(void);
void* _CTServerConnectionResetUIConfiguredApns(void);
void* _CTServerConnectionResumePacketContextSettings(void);
void* _CTServerConnectionSIMToolkitDisplayReady(void);
void* _CTServerConnectionSavePhonebookEntry(void);
void* _CTServerConnectionSelectNetwork(void);
void* _CTServerConnectionSelectPhonebook(void);
void* _CTServerConnectionSelectSIMToolkitListItem(void);
void* _CTServerConnectionSelectSIMToolkitMenuItem(void);
void* _CTServerConnectionSendAwdQueriableMetric(void);
void* _CTServerConnectionSendBarrier(void);
void* _CTServerConnectionSendEnhancedLinkQualityTrafficInfo(void);
void* _CTServerConnectionSendRemoteRestoreToDefault(void);
void* _CTServerConnectionSendSIMToolkitBooleanResponse(void);
void* _CTServerConnectionSendSIMToolkitResponse(void);
void* _CTServerConnectionSendSIMToolkitStringResponse(void);
void* _CTServerConnectionSendUSSDResponse(void);
void* _CTServerConnectionSendUserActivity(void);
void* _CTServerConnectionSetActiveAudioSystemConfiguration(void);
void* _CTServerConnectionSetAudioLoggingEnabled(void);
void* _CTServerConnectionSetAudioPath(void);
void* _CTServerConnectionSetBandInfo(void);
void* _CTServerConnectionSetBasebandSettings(void);
void* _CTServerConnectionSetCDMAInternationalRoaming(void);
void* _CTServerConnectionSetCampOnlyMode(void);
void* _CTServerConnectionSetCapability(void);
void* _CTServerConnectionSetCapabilityExtended(void);
void* _CTServerConnectionSetCellBroadcastSettingForAlertType(void);
void* _CTServerConnectionSetCellularDataIsDisallowed(void);
void* _CTServerConnectionSetCellularDataIsEnabled(void);
void* _CTServerConnectionSetCellularDataIsEnabledEx(void);
void* _CTServerConnectionSetCellularUsagePolicy(void);
void* _CTServerConnectionSetCellularUsagePolicyEx(void);
void* _CTServerConnectionSetCellularUsagePolicyMirroring(void);
void* _CTServerConnectionSetCellularUsagePolicyOsVersion(void);
void* _CTServerConnectionSetChannelMute(void);
void* _CTServerConnectionSetCivicInfoBasedOnCurrentLocation(void);
void* _CTServerConnectionSetDTMFType(void);
void* _CTServerConnectionSetDefaultConnection(void);
void* _CTServerConnectionSetDisallowTelephonyFeature(void);
void* _CTServerConnectionSetEMBMSActive(void);
void* _CTServerConnectionSetEMBMSSAIInterestedInfo(void);
void* _CTServerConnectionSetEnableOnlyHomeNetwork(void);
void* _CTServerConnectionSetI2SFormat(void);
void* _CTServerConnectionSetInternalManagedState(void);
void* _CTServerConnectionSetInternationalDataAccessStatus(void);
void* _CTServerConnectionSetMasterMute(void);
void* _CTServerConnectionSetMaxAllowedDataRate(void);
void* _CTServerConnectionSetMaxTemperature(void);
void* _CTServerConnectionSetMaxTransmitPower(void);
void* _CTServerConnectionSetMixState(void);
void* _CTServerConnectionSetOTAServerOverride(void);
void* _CTServerConnectionSetPacketContextActive(void);
void* _CTServerConnectionSetPacketContextActiveByServiceType(void);
void* _CTServerConnectionSetPacketNotificationFilter(void);
void* _CTServerConnectionSetPacketProtocolActiveByInterface(void);
void* _CTServerConnectionSetPacketProtocolActiveByServiceType(void);
void* _CTServerConnectionSetPeriodicTemperatureUpdate(void);
void* _CTServerConnectionSetPostponementTicket(void);
void* _CTServerConnectionSetRATSelection(void);
void* _CTServerConnectionSetReliableNetworkFallbackToCellular(void);
void* _CTServerConnectionSetShowUsageAlert(void);
void* _CTServerConnectionSetSourceGain(void);
void* _CTServerConnectionSetTTYMode(void);
void* _CTServerConnectionSetTargetQueue(void);
void* _CTServerConnectionSetTestModeFunction(void);
void* _CTServerConnectionSetTimeCacheValidityPeriod(void);
void* _CTServerConnectionSetTraceProperty(void);
void* _CTServerConnectionSetUIConfiguredApns(void);
void* _CTServerConnectionSetUsageAlertParameters(void);
void* _CTServerConnectionSetVibratorState(void);
void* _CTServerConnectionSetVoiceMute(void);
void* _CTServerConnectionShouldDiscourageDisableLteDataRate(void);
void* _CTServerConnectionShouldWarnDisabledLteMayImpactService(void);
void* _CTServerConnectionSilenceAssertionCreate(void);
void* _CTServerConnectionSimRefresh(void);
void* _CTServerConnectionStartAudioTone(void);
void* _CTServerConnectionStopAudioTone(void);
void* _CTServerConnectionSuspendPacketContextSettings(void);
void* _CTServerConnectionTetheringAssertionCreate(void);
void* _CTServerConnectionUIMAuthenticate(void);
void* _CTServerConnectionUnloadManagedCellularProfile(void);
void* _CTServerConnectionUnlockPostponementTicket(void);
void* _CTServerConnectionUnregisterForAllNotifications(void);
void* _CTServerConnectionUnregisterForEvent(void);
void* _CTServerConnectionUnregisterForNotification(void);
void* _CTServerConnectionUnregisterSilentHoursCallback(void);
void* _CTServerConnectionUpdateAccountWithFeatureOrService(void);
void* _CTServerConnectionUpdateCarrierPushToken(void);
void* _CTServerConnectionUpdateProtocolQualityOfService(void);
void* _CTServerConnectionUpdateQualityOfService(void);
void* _CTServerConnectionVerifyCarrierEntitlements(void);
void* _CTServerEnableFastDormancy(void);
void* _CTServerForceFastDormancy(void);
void* _CTServerIsFastDormancyEnabled(void);
void* _CTServerSetSupportsVoiceCall(void);
void* _ConvertBinaryToHex(void);
void* _CreateDirectoriesToPath(void);
void* _GetMobileUserDirectory(void);
void* _GetMobileUserGID(void);
void* _GetMobileUserUID(void);
void* _GetWirelessUserDirectory(void);
void* _GetWirelessUserGID(void);
void* _GetWirelessUserUID(void);
void* _SynchronizeCommCenterPreferences(void);
void* _Z10asCFString24EntitlementAuthTokenType(void);
void* _Z10createPLMNRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_(void);
void* _Z10createPLMNii(void);
void* _Z10createPLMNiib(void);
void* _Z12createCFPLMNRK3MCCRK3MNC(void);
void* _Z15TTYTypeAsString7TTYType(void);
void* _Z17isEmergencyNumberRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(void);
void* _Z18EmCallTypeAsString23CTCallEmergencyCallType(void);
void* _Z22CTGetRootVersionStringv(void);
void* _Z22callSourceModeAsString16CCCallSourceMode(void);
void* _Z8asString20EntitlementTopicType(void);
void* _Z8asString24EntitlementAuthTokenType(void);
void* _Z8asStringN19NetworkNotification16NotificationTypeE(void);
void* _Z8formPLMNRK3MCCRK3MNC(void);
void* _ZN14CSIPhoneNumber13setBaseNumberEPKc(void);
void* _ZN14CSIPhoneNumber13setBaseNumberERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN14CSIPhoneNumber13setDtmfStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN14CSIPhoneNumber15setTypeOfNumberE15PhoneNumberType(void);
void* _ZN14CSIPhoneNumber16setTypeOfAddressEi(void);
void* _ZN14CSIPhoneNumber19setCLIRRequestStateE16CLIRRequestState(void);
void* _ZN14CSIPhoneNumber20setEmergencyCategoryEj(void);
void* _ZN14CSIPhoneNumber22setIsListedAsEmergencyEb(void);
void* _ZN14CSIPhoneNumber23setIsEmSMSTextSupportedEb(void);
void* _ZN14CSIPhoneNumber27convertLettersToPhoneNumberEv(void);
void* _ZN14CSIPhoneNumberC1EPKc(void);
void* _ZN14CSIPhoneNumberC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN14CSIPhoneNumberC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE15PhoneNumberType(void);
void* _ZN14CSIPhoneNumberC1EiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN14CSIPhoneNumberC1Ev(void);
void* _ZN14CSIPhoneNumberC2EPKc(void);
void* _ZN14CSIPhoneNumberC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN14CSIPhoneNumberC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE15PhoneNumberType(void);
void* _ZN14CSIPhoneNumberC2EiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN14CSIPhoneNumberC2Ev(void);
void* _ZN19NetworkNotification14_ConvertToBoolEPK10__CFStringRPKv(void);
void* _ZN19NetworkNotification14_ConvertToDateEPK10__CFStringRPKv(void);
void* _ZN19NetworkNotification14setValueForKeyEPK10__CFStringS2_NS_24NotificationTrackChangesE(void);
void* _ZN19NetworkNotification15_GetTypeForNameEPK10__CFString(void);
void* _ZN19NetworkNotification16_ConvertToNumberEPK10__CFStringRPKv(void);
void* _ZN19NetworkNotification18notificationStringEv(void);
void* _ZN19NetworkNotification18parsedNotificationEv(void);
void* _ZN19NetworkNotification21_GetFinalFormForValueEPK10__CFStringS2_RPKv(void);
void* _ZN19NetworkNotification24_parseNotificationStringEv(void);
void* _ZN19NetworkNotification30_NotificationKeyIsValidForTypeEPK10__CFString(void);
void* _ZN19NetworkNotification3urlEv(void);
void* _ZN19NetworkNotification4nameEv(void);
void* _ZN19NetworkNotification4typeEv(void);
void* _ZN19NetworkNotificationC1EPK10__CFString(void);
void* _ZN19NetworkNotificationC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN19NetworkNotificationC2EPK10__CFString(void);
void* _ZN19NetworkNotificationC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN19NetworkNotificationD1Ev(void);
void* _ZN19NetworkNotificationD2Ev(void);
void* _ZN3MCC5clearEv(void);
void* _ZN3MCCC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN3MCCC1Et(void);
void* _ZN3MCCC1EtRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN3MCCC1Ev(void);
void* _ZN3MCCC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN3MCCC2Et(void);
void* _ZN3MCCC2EtRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN3MCCC2Ev(void);
void* _ZN3MCCaSERKS_(void);
void* _ZN3MNCC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN3MNCC1EtRK3MCC(void);
void* _ZN3MNCC1EtRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN3MNCC1Ev(void);
void* _ZN3MNCC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN3MNCC2EtRK3MCC(void);
void* _ZN3MNCC2EtRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN3MNCC2Ev(void);
void* _ZN9MCCAndMNCC1ERK3MCCRK3MNC(void);
void* _ZN9MCCAndMNCC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN9MCCAndMNCC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(void);
void* _ZN9MCCAndMNCC1Ett(void);
void* _ZN9MCCAndMNCC1Ev(void);
void* _ZN9MCCAndMNCC2ERK3MCCRK3MNC(void);
void* _ZN9MCCAndMNCC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZN9MCCAndMNCC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(void);
void* _ZN9MCCAndMNCC2Ett(void);
void* _ZN9MCCAndMNCC2Ev(void);
void* _ZNK14CSIPhoneNumber12getFormattedEv(void);
void* _ZNK14CSIPhoneNumber13getBaseNumberEv(void);
void* _ZNK14CSIPhoneNumber13getDtmfStringEv(void);
void* _ZNK14CSIPhoneNumber13getFullNumberEv(void);
void* _ZNK14CSIPhoneNumber15getTypeOfNumberEv(void);
void* _ZNK14CSIPhoneNumber16getTypeOfAddressEv(void);
void* _ZNK14CSIPhoneNumber17hasSameBaseNumberERKS_(void);
void* _ZNK14CSIPhoneNumber19getCLIRRequestStateEv(void);
void* _ZNK14CSIPhoneNumber19getFullNumberHelperENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(void);
void* _ZNK14CSIPhoneNumber20getEmergencyCategoryEv(void);
void* _ZNK14CSIPhoneNumber21getFullOriginalNumberEv(void);
void* _ZNK14CSIPhoneNumber22getIsListedAsEmergencyEv(void);
void* _ZNK14CSIPhoneNumber23getIsEmSMSTextSupportedEv(void);
void* _ZNK14CSIPhoneNumber23hasEmergencyCategorySetEv(void);
void* _ZNK14CSIPhoneNumber26getBaseNumberNoPauseDigitsEv(void);
void* _ZNK14CSIPhoneNumber26getFullNumberNoPauseDigitsEv(void);
void* _ZNK14CSIPhoneNumber8getIsMMIEv(void);
void* _ZNK14CSIPhoneNumber9getIsUSSDEv(void);
void* _ZNK14CSIPhoneNumbereqERKS_(void);
void* _ZNK14CSIPhoneNumberneERKS_(void);
void* _ZNK19NetworkNotification24copyUnparsedNotificationEv(void);
void* _ZNK3MCC11getIntValueEv(void);
void* _ZNK3MCC14getStringValueEv(void);
void* _ZNK3MCC5validEv(void);
void* _ZNK3MCCeqERKS_(void);
void* _ZNK3MCCgtERKS_(void);
void* _ZNK3MCCltERKS_(void);
void* _ZNK3MCCneERKS_(void);
void* _ZNK3MNC12isThreeDigitEv(void);
void* _ZNK3MNC15getIntegerWidthEv(void);
void* _ZNK9MCCAndMNC14getStringValueEv(void);
void* _ZNK9MCCAndMNC6getMccEv(void);
void* _ZNK9MCCAndMNC6getMncEv(void);
void* _ZNK9MCCAndMNCeqERKS_(void);
void* _ZNK9MCCAndMNCltERKS_(void);
void* _ZNK9MCCAndMNCneERKS_(void);
void* _ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK9MCCAndMNC(void);
void* _is3DigitMNCWithIMSI(void);
void* _is3DigitMNCWithMCC(void);
void* asString(void);
void* createUuidBytes(void);
void* getClientKeyForEntitlementType(void);
void* getEntitlementTypeFromClientKey(void);
void* kCTDataConnectionServiceTypeFromIndex(void);
void* kCTDataConnectionTypeFromString(void);
void* radioStateAsString(void);

#endif
